https://viewer.imaging.datacommons.cancer.gov/viewer/1.3.6.1.4.1.14519.5.2.1.177771772342313796313139165433764388011

element = cornerstone.getEnabledElements()[0];

base64 = element.canvas.toDataURL('image/png')
base64 = base64.replace("data:image/png;base64,","")
uint8arr = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));

endpoint = 'https://model-zoo.metademolab.com/predictions/segment_everything_box_model';        
embedding = await fetch(endpoint, { method: "POST", body: uint8arr }).then((response) => response.json());



// SETUP ORT
const script = document.createElement("script")
script.type = "text/javascript"
script.src = "https://cdn.jsdelivr.net/npm/onnxruntime-web/dist/ort.min.js"
document.head.appendChild(script)
eval(script)

// START SAM SESSION
session = await ort.InferenceSession.create('https://cs666.org/onnx/sam.onnx');



image=element.canvas.toDataURL("image/png").replace("image/png", "image/octet-stream");
window.location.href=image; // it will save locally



const RectangleRoiTool = cornerstoneTools.RectangleRoiTool;
cornerstoneTools.addTool(RectangleRoiTool)
cornerstoneTools.setToolEnabled('RectangleRoi', { mouseButtonMask: 1 })



element.canvas.onmouseup = function(e) {console.log('test',e);}

var RectangleScissorsTool = cornerstoneTools.RectangleScissorsTool;
cornerstoneTools.addTool(RectangleScissorsTool)
cornerstoneTools.setToolActive('RectangleScissors', { mouseButtonMask: 1 })


cornerstone.getEnabledElementsByImageId(element.image.imageId)



cornerstone.renderGrayscaleImage(element, true)